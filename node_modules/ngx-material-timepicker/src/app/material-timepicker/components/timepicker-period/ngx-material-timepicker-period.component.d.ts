import { EventEmitter } from '@angular/core';
import { TimePeriod } from '../../models/time-period.enum';
import { TimeUnit } from '../../models/time-unit.enum';
import { ClockFaceTime } from '../../models/clock-face-time.interface';
import { DateTime } from 'luxon';
import * as ɵngcc0 from '@angular/core';
export declare class NgxMaterialTimepickerPeriodComponent {
    timePeriod: typeof TimePeriod;
    isPeriodAvailable: boolean;
    selectedPeriod: TimePeriod;
    format: number;
    activeTimeUnit: TimeUnit;
    hours: ClockFaceTime[];
    minutes: ClockFaceTime[];
    minTime: DateTime;
    maxTime: DateTime;
    selectedHour: number | string;
    meridiems: string[];
    periodChanged: EventEmitter<TimePeriod>;
    changePeriod(period: TimePeriod): void;
    animationDone(): void;
    private isSwitchPeriodAvailable;
    private getDisabledTimeByPeriod;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxMaterialTimepickerPeriodComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxMaterialTimepickerPeriodComponent, "ngx-material-timepicker-period", never, { "selectedPeriod": "selectedPeriod"; "format": "format"; "activeTimeUnit": "activeTimeUnit"; "hours": "hours"; "minutes": "minutes"; "minTime": "minTime"; "maxTime": "maxTime"; "selectedHour": "selectedHour"; "meridiems": "meridiems"; }, { "periodChanged": "periodChanged"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hdGVyaWFsLXRpbWVwaWNrZXItcGVyaW9kLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJuZ3gtbWF0ZXJpYWwtdGltZXBpY2tlci1wZXJpb2QuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGltZVBlcmlvZCB9IGZyb20gJy4uLy4uL21vZGVscy90aW1lLXBlcmlvZC5lbnVtJztcbmltcG9ydCB7IFRpbWVVbml0IH0gZnJvbSAnLi4vLi4vbW9kZWxzL3RpbWUtdW5pdC5lbnVtJztcbmltcG9ydCB7IENsb2NrRmFjZVRpbWUgfSBmcm9tICcuLi8uLi9tb2RlbHMvY2xvY2stZmFjZS10aW1lLmludGVyZmFjZSc7XG5pbXBvcnQgeyBEYXRlVGltZSB9IGZyb20gJ2x1eG9uJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5neE1hdGVyaWFsVGltZXBpY2tlclBlcmlvZENvbXBvbmVudCB7XG4gICAgdGltZVBlcmlvZDogdHlwZW9mIFRpbWVQZXJpb2Q7XG4gICAgaXNQZXJpb2RBdmFpbGFibGU6IGJvb2xlYW47XG4gICAgc2VsZWN0ZWRQZXJpb2Q6IFRpbWVQZXJpb2Q7XG4gICAgZm9ybWF0OiBudW1iZXI7XG4gICAgYWN0aXZlVGltZVVuaXQ6IFRpbWVVbml0O1xuICAgIGhvdXJzOiBDbG9ja0ZhY2VUaW1lW107XG4gICAgbWludXRlczogQ2xvY2tGYWNlVGltZVtdO1xuICAgIG1pblRpbWU6IERhdGVUaW1lO1xuICAgIG1heFRpbWU6IERhdGVUaW1lO1xuICAgIHNlbGVjdGVkSG91cjogbnVtYmVyIHwgc3RyaW5nO1xuICAgIG1lcmlkaWVtczogc3RyaW5nW107XG4gICAgcGVyaW9kQ2hhbmdlZDogRXZlbnRFbWl0dGVyPFRpbWVQZXJpb2Q+O1xuICAgIGNoYW5nZVBlcmlvZChwZXJpb2Q6IFRpbWVQZXJpb2QpOiB2b2lkO1xuICAgIGFuaW1hdGlvbkRvbmUoKTogdm9pZDtcbiAgICBwcml2YXRlIGlzU3dpdGNoUGVyaW9kQXZhaWxhYmxlO1xuICAgIHByaXZhdGUgZ2V0RGlzYWJsZWRUaW1lQnlQZXJpb2Q7XG59XG4iXX0=