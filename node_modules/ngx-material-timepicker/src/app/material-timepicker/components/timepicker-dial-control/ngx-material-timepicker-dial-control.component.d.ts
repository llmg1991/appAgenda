import { EventEmitter } from '@angular/core';
import { ClockFaceTime } from '../../models/clock-face-time.interface';
import { TimeUnit } from '../../models/time-unit.enum';
import { TimeParserPipe } from '../../pipes/time-parser.pipe';
import * as ɵngcc0 from '@angular/core';
export declare class NgxMaterialTimepickerDialControlComponent {
    private timeParserPipe;
    previousTime: number | string;
    timeList: ClockFaceTime[];
    timeUnit: TimeUnit;
    time: string;
    isActive: boolean;
    isEditable: boolean;
    minutesGap: number;
    disabled: boolean;
    timeUnitChanged: EventEmitter<TimeUnit>;
    timeChanged: EventEmitter<ClockFaceTime>;
    focused: EventEmitter<null>;
    unfocused: EventEmitter<null>;
    constructor(timeParserPipe: TimeParserPipe);
    private readonly selectedTime;
    saveTimeAndChangeTimeUnit(event: FocusEvent, unit: TimeUnit): void;
    updateTime(): void;
    changeTimeByKeyboard(e: any): void;
    onKeydown(e: any): void;
    onModelChange(value: string): void;
    private changeTimeByArrow;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxMaterialTimepickerDialControlComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxMaterialTimepickerDialControlComponent, "ngx-material-timepicker-dial-control", never, { "time": "time"; "timeList": "timeList"; "timeUnit": "timeUnit"; "isActive": "isActive"; "isEditable": "isEditable"; "minutesGap": "minutesGap"; "disabled": "disabled"; }, { "timeUnitChanged": "timeUnitChanged"; "timeChanged": "timeChanged"; "focused": "focused"; "unfocused": "unfocused"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hdGVyaWFsLXRpbWVwaWNrZXItZGlhbC1jb250cm9sLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJuZ3gtbWF0ZXJpYWwtdGltZXBpY2tlci1kaWFsLWNvbnRyb2wuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDbG9ja0ZhY2VUaW1lIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2Nsb2NrLWZhY2UtdGltZS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgVGltZVVuaXQgfSBmcm9tICcuLi8uLi9tb2RlbHMvdGltZS11bml0LmVudW0nO1xuaW1wb3J0IHsgVGltZVBhcnNlclBpcGUgfSBmcm9tICcuLi8uLi9waXBlcy90aW1lLXBhcnNlci5waXBlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5neE1hdGVyaWFsVGltZXBpY2tlckRpYWxDb250cm9sQ29tcG9uZW50IHtcbiAgICBwcml2YXRlIHRpbWVQYXJzZXJQaXBlO1xuICAgIHByZXZpb3VzVGltZTogbnVtYmVyIHwgc3RyaW5nO1xuICAgIHRpbWVMaXN0OiBDbG9ja0ZhY2VUaW1lW107XG4gICAgdGltZVVuaXQ6IFRpbWVVbml0O1xuICAgIHRpbWU6IHN0cmluZztcbiAgICBpc0FjdGl2ZTogYm9vbGVhbjtcbiAgICBpc0VkaXRhYmxlOiBib29sZWFuO1xuICAgIG1pbnV0ZXNHYXA6IG51bWJlcjtcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICB0aW1lVW5pdENoYW5nZWQ6IEV2ZW50RW1pdHRlcjxUaW1lVW5pdD47XG4gICAgdGltZUNoYW5nZWQ6IEV2ZW50RW1pdHRlcjxDbG9ja0ZhY2VUaW1lPjtcbiAgICBmb2N1c2VkOiBFdmVudEVtaXR0ZXI8bnVsbD47XG4gICAgdW5mb2N1c2VkOiBFdmVudEVtaXR0ZXI8bnVsbD47XG4gICAgY29uc3RydWN0b3IodGltZVBhcnNlclBpcGU6IFRpbWVQYXJzZXJQaXBlKTtcbiAgICBwcml2YXRlIHJlYWRvbmx5IHNlbGVjdGVkVGltZTtcbiAgICBzYXZlVGltZUFuZENoYW5nZVRpbWVVbml0KGV2ZW50OiBGb2N1c0V2ZW50LCB1bml0OiBUaW1lVW5pdCk6IHZvaWQ7XG4gICAgdXBkYXRlVGltZSgpOiB2b2lkO1xuICAgIGNoYW5nZVRpbWVCeUtleWJvYXJkKGU6IGFueSk6IHZvaWQ7XG4gICAgb25LZXlkb3duKGU6IGFueSk6IHZvaWQ7XG4gICAgb25Nb2RlbENoYW5nZSh2YWx1ZTogc3RyaW5nKTogdm9pZDtcbiAgICBwcml2YXRlIGNoYW5nZVRpbWVCeUFycm93O1xufVxuIl19