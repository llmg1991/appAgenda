import { AfterContentInit, ChangeDetectorRef, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { matRangeDatepicker } from './datepicker';
import { matRangeDatepickerIntl } from './datepicker-intl';
/** Can be used to override the icon of a `matDatepickerToggle`. */
import * as ɵngcc0 from '@angular/core';
export declare class matRangeDatepickerToggleIcon {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<matRangeDatepickerToggleIcon, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<matRangeDatepickerToggleIcon, "[matDatepickerToggleIcon]", never, {}, {}, never>;
}
export declare class matRangeDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {
    _intl: matRangeDatepickerIntl;
    private _changeDetectorRef;
    /** Datepicker instance that the button will toggle. */
    datepicker: matRangeDatepicker<D>;
    /** Custom icon set by the consumer. */
    _customIcon: matRangeDatepickerToggleIcon;
    private _stateChanges;
    private _disabled;
    constructor(_intl: matRangeDatepickerIntl, _changeDetectorRef: ChangeDetectorRef);
    /** Whether the toggle button is disabled. */
    disabled: boolean;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    ngAfterContentInit(): void;
    _open(event: Event): void;
    private _watchStateChanges();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<matRangeDatepickerToggle<any>, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<matRangeDatepickerToggle<any>, "mat-range-datepicker-toggle", ["matDatepickerToggle"], { "disabled": "disabled"; "datepicker": "for"; }, {}, ["_customIcon"], ["[matDatepickerToggleIcon]"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci10b2dnbGUuZC50cyIsInNvdXJjZXMiOlsiZGF0ZXBpY2tlci10b2dnbGUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyQ29udGVudEluaXQsIENoYW5nZURldGVjdG9yUmVmLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgbWF0UmFuZ2VEYXRlcGlja2VyIH0gZnJvbSAnLi9kYXRlcGlja2VyJztcbmltcG9ydCB7IG1hdFJhbmdlRGF0ZXBpY2tlckludGwgfSBmcm9tICcuL2RhdGVwaWNrZXItaW50bCc7XG4vKiogQ2FuIGJlIHVzZWQgdG8gb3ZlcnJpZGUgdGhlIGljb24gb2YgYSBgbWF0RGF0ZXBpY2tlclRvZ2dsZWAuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBtYXRSYW5nZURhdGVwaWNrZXJUb2dnbGVJY29uIHtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIG1hdFJhbmdlRGF0ZXBpY2tlclRvZ2dsZTxEPiBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcbiAgICBfaW50bDogbWF0UmFuZ2VEYXRlcGlja2VySW50bDtcbiAgICBwcml2YXRlIF9jaGFuZ2VEZXRlY3RvclJlZjtcbiAgICAvKiogRGF0ZXBpY2tlciBpbnN0YW5jZSB0aGF0IHRoZSBidXR0b24gd2lsbCB0b2dnbGUuICovXG4gICAgZGF0ZXBpY2tlcjogbWF0UmFuZ2VEYXRlcGlja2VyPEQ+O1xuICAgIC8qKiBDdXN0b20gaWNvbiBzZXQgYnkgdGhlIGNvbnN1bWVyLiAqL1xuICAgIF9jdXN0b21JY29uOiBtYXRSYW5nZURhdGVwaWNrZXJUb2dnbGVJY29uO1xuICAgIHByaXZhdGUgX3N0YXRlQ2hhbmdlcztcbiAgICBwcml2YXRlIF9kaXNhYmxlZDtcbiAgICBjb25zdHJ1Y3RvcihfaW50bDogbWF0UmFuZ2VEYXRlcGlja2VySW50bCwgX2NoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgLyoqIFdoZXRoZXIgdGhlIHRvZ2dsZSBidXR0b24gaXMgZGlzYWJsZWQuICovXG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBfb3BlbihldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIHByaXZhdGUgX3dhdGNoU3RhdGVDaGFuZ2VzKCk7XG59XG4iXX0=